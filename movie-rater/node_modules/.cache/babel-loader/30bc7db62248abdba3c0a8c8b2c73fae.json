{"ast":null,"code":"var _jsxFileName = \"/Users/Clemens/Desktop/udemy_django_react_react_native_course/movie-rater/src/components/movie-form.js\";\nimport React, { useState } from 'react';\nimport { API } from '../api-service';\n\nfunction MovieForm(props) {\n  const [title, setTitle] = useState(props.movie.title);\n  const [description, setDescription] = useState(props.movie.title);\n\n  const updateClicked = () => {\n    console.log(\"Clicked update\");\n    API.updateMovie(props.movie.id, {\n      title,\n      description\n    }).then(resp => props.updatedMovie(resp)).catch(error => console.log(error));\n  };\n\n  const createClicked = () => {\n    console.log(\"Clicked update\");\n    API.createMovie({\n      title,\n      description\n    }).then(resp => console.log(resp)).then(resp => props.movieCreated(resp)).catch(error => console.log(error));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 3\n    }\n  }, props.movie ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    id: \"title\",\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }\n  }, \" Title \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"title\",\n    type: \"text\",\n    palceholder: \"title\",\n    value: title,\n    onChange: evt => setTitle(evt.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    id: \"description\",\n    palceholder: \"Description\",\n    value: description,\n    onChange: evt => setDescription(evt.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }\n  }), props.movie.id ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: evt => updateClicked(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }, \"Update\") : /*#__PURE__*/React.createElement(\"button\", {\n    onClick: evt => createClicked(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }\n  }, \"Create\")) : null);\n}\n\nexport default MovieForm;","map":{"version":3,"sources":["/Users/Clemens/Desktop/udemy_django_react_react_native_course/movie-rater/src/components/movie-form.js"],"names":["React","useState","API","MovieForm","props","title","setTitle","movie","description","setDescription","updateClicked","console","log","updateMovie","id","then","resp","updatedMovie","catch","error","createClicked","createMovie","movieCreated","evt","target","value"],"mappings":"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","sourcesContent":["import React , { useState } from 'react';\nimport { API } from '../api-service';\n\nfunction MovieForm(props) {\n\n\tconst [ title, setTitle ] = useState(props.movie.title)\n\tconst [ description, setDescription ] = useState(props.movie.title)\n\n\tconst updateClicked = () => {\n\t\tconsole.log(\"Clicked update\")\n\t\tAPI.updateMovie(props.movie.id, {title, description})\n\t\t.then( resp => props.updatedMovie(resp))\n\t\t.catch(error => console.log(error))\n\t}\n\n\tconst createClicked = () => {\n\t\tconsole.log(\"Clicked update\")\n\t\tAPI.createMovie({title, description}).\n\t\tthen(resp => console.log(resp))\n\t\t.then( resp => props.movieCreated(resp))\n\t\t.catch(error => console.log(error))\n\n\t}\n\treturn (\n\t\t<React.Fragment>\n\t\t{ props.movie ?(\n\t\t\t<div>\n\t\t\t<label id=\"title\" htmlFor =\"title\"> Title </label>\n\t\t\t<br/>\n\t\t\t<input id=\"title\" type=\"text\" palceholder=\"title\" value={title}\n\t\t\tonChange={evt => setTitle(evt.target.value)}/>\n\t\t\t<label htmlFor=\"description\" >Description</label>\n\t\t\t<br/>\n\t\t\t<textarea type=\"text\" id=\"description\" palceholder=\"Description\" value={description}\n\t\t\tonChange={evt => setDescription(evt.target.value)}/>\n\t\t\t{ props.movie.id ? \n\t\t\t<button onClick={ evt => updateClicked()}>Update</button> :\n\t\t\t<button onClick={ evt => createClicked()}>Create</button> \n\t\t\t\t}\t\n\t\t\t</div>\n\t\t) : null}\n\n\n\t\t</React.Fragment>\n\t\t)\n}\n\nexport default MovieForm;\n\n"]},"metadata":{},"sourceType":"module"}