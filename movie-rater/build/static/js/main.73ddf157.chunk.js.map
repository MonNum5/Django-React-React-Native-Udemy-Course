{"version":3,"sources":["api-service.js","components/movie-list.js","components/movie-details.js","components/movie-form.js","App.js","hooks/useFetch.js","serviceWorker.js","components/auth.js","index.js"],"names":["API","mov_id","body","token","fetch","process","method","headers","JSON","stringify","then","resp","json","console","log","MovieList","props","movieClicked","movie","evt","useCookies","movies","map","key","id","className","onClick","title","icon","faEdit","editClicked","faTrash","deleteMovie","removeClicked","catch","error","MovieDetails","useState","highlighted","sethighlighted","highlightRate","high","getDetails","updateMovie","description","faStar","avg_rating","no_of_ratings","Array","e","i","onMouseEnter","onMouseLeave","rate","stars","MovieForm","setTitle","setDescription","useEffect","isDisabled","length","Fragment","htmlFor","type","palceholder","value","onChange","target","updatedMovie","disabled","createMovie","movieCreated","App","setMovie","selectedMovie","setSelectedMovie","editedMovie","setEditedMovie","deleteToken","data","setData","loading","setLoading","setError","a","getMovies","err","fetchData","useFetch","window","location","href","faFilm","faSignOutAlt","newMovies","filter","mov","Boolean","hostname","match","Auth","username","setUsername","password","setPassword","isLoginView","setIsLoginView","setToken","loginClicked","loginUser","registerUser","Router","StrictMode","CookiesProvider","exact","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.73ddf157.chunk.js","sourcesContent":["\nexport class API {\n\n\tstatic updateMovie(mov_id, body, token){\n\t\treturn(\n        fetch(`${process.env.REACT_APP_API_URL}/api/movies/${mov_id}/`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Token ${token}`\n          },\n          body: JSON.stringify( body )\n        })\n        .then( resp => resp.json())\n        )\n     }\n\n  static createMovie(body, token){\n    return(\n        fetch(`${process.env.REACT_APP_API_URL}/api/movies/`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Token ${token}`\n          },\n          body: JSON.stringify( body )\n        })\n        .then( resp => resp.json())\n        )\n     }\n\n  static deleteMovie(mov_id, token){\n    return(\n        fetch(`${process.env.REACT_APP_API_URL}/api/movies/${mov_id}`, {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Token ${token}`\n          },\n        })\n        )\n     }\n\n  static getMovies(token){\n    return (\n        fetch(`${process.env.REACT_APP_API_URL}/api/movies/`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Token ${token}`,\n          }\n        })\n        .then( resp => resp.json())\n      )\n  }\n\n  static loginUser(body){\n    return(\n        fetch(`${process.env.REACT_APP_API_URL}/auth/`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify( body )\n        })\n        .then( resp => resp.json())\n        )\n     }\n\n  static registerUser(body){\n    console.log(body)\n    return(\n        fetch(`${process.env.REACT_APP_API_URL}/api/users/`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify( body )\n        })\n        .then( resp => resp.json())\n        )\n     }\n}","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons'\nimport { API } from '../api-service'\nimport { useCookies } from 'react-cookie'\n\nfunction MovieList(props){\n\t\n\tconst movieClicked = (movie) => (evt) => {\n\t\tprops.movieClicked(movie)\n\t}\n\n\tconst editClicked = movie => {\n\t\tprops.editClicked(movie);\n\t}\n\n\tconst [token] = useCookies(['mr-token']);\n\n\n\n\tconst removeClicked = movie => {\n\t\tAPI.deleteMovie(movie.id, token['mr-token'])\n\t\t.then(() =>props.removeClicked(movie))\n\t\t.catch(error => console.log(error))\n\t\t;\n\t}\n\n\treturn(\n\t\t<div>\n           { props.movies && props.movies.map( movie => {\n                    return(\n                        <div key={movie.id} className=\"movie-item\">\n                        \t<h2 onClick={movieClicked(movie)}> {movie.title} </h2>\n                        \t<FontAwesomeIcon icon={faEdit} onClick = {() => editClicked(movie)}/>\n                        \t<FontAwesomeIcon icon={faTrash} onClick = {() => removeClicked(movie)}/>\n                        </div>\n                        \n                      )\n          })}\n         </div>\n\t\t)\n}\n\nexport default MovieList;","import React, {useState} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStar } from '@fortawesome/free-solid-svg-icons'\nimport { useCookies } from 'react-cookie'\n\nfunction MovieDetails(props){\n\t\n  const [token] = useCookies(['mr-token']);\n\n\tconst movieClicked = (movie) => (evt) => {\n\t\tprops.movieClicked(movie)\n\t}\n\n  const [highlighted, sethighlighted] = useState(-1);\n\n  const highlightRate = high => evt => {\n    sethighlighted(high);\n  }\n\n  const rateClicked = rate => evt => {\n        fetch(`${process.env.REACT_APP_API_URL}/api/movies/${props.movie.id}/rate_movie/`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Token ${token['mr-token']}`,          },\n          body: JSON.stringify( {stars: rate+1} )\n        })\n        .then( resp => resp.json())\n        .then( resp => getDetails())\n        .catch( error => console.log(error))\n      }\n\n    const getDetails = () => {\n      fetch(`${process.env.REACT_APP_API_URL}/${props.movie.id}/`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Token ${token['mr-token']}`,\n          },\n        })\n        .then( resp => resp.json())\n        .then( resp => props.updateMovie(resp))\n        .catch( error => console.log(error))\n    }\n\n\treturn(\n\t\t<div>\n      { props.movie ? (\n        <div>\n          <h1>{props.movie.title}</h1>\n          <p>{props.movie.description}</p> \n          <div>\n          <FontAwesomeIcon icon={faStar} className={props.movie.avg_rating > 0 ? \"orange\":''}/>\n          <FontAwesomeIcon icon={faStar} className={props.movie.avg_rating > 1 ? \"orange\":''}/>\n          <FontAwesomeIcon icon={faStar} className={props.movie.avg_rating > 2 ? \"orange\":''}/>\n          <FontAwesomeIcon icon={faStar} className={props.movie.avg_rating > 3 ? \"orange\":''}/>\n          <FontAwesomeIcon icon={faStar} className={props.movie.avg_rating > 4 ? \"orange\":''}/>\n          ({props.movie.no_of_ratings})\n        </div>\n        <div className=\"rate-container\">\n            <h2>Rate it</h2> \n              { [...Array(5)].map( (e, i)=> {\n                return (<FontAwesomeIcon key={i} icon={faStar} className={highlighted > i-1 ? \"purple\":''}\n                  onMouseEnter={highlightRate(i)}\n                  onMouseLeave={highlightRate(-1)}\n                  onClick={rateClicked(i)}\n                  />)\n              }\n                )}\n        </div>  \n        </div>\n      ) : null}   \n\n       \n    </div>\n\t\t)\n}\n\nexport default MovieDetails;","import React , { useState, useEffect } from 'react';\nimport { API } from '../api-service';\nimport { useCookies } from 'react-cookie'\n\nfunction MovieForm(props) {\n\n\tconst [token] = useCookies(['mr-token']);\n\n\tconst [ title, setTitle ] = useState('')\n\tconst [ description, setDescription ] = useState('')\n\n\tuseEffect( () => {\n\t\tsetTitle(props.movie.title)\n\t\tsetDescription(props.movie.description)\n\t}, [props.movie])\n\n\tconst updateClicked = () => {\n\t\tAPI.updateMovie(props.movie.id, {title, description}, token['mr-token'])\n\t\t.then( resp => props.updatedMovie(resp))\n\t\t.catch(error => console.log(error))\n\t}\n\n\tconst createClicked = () => {\n\t\tAPI.createMovie({title, description}, token['mr-token'])\n\t\t.then( resp => props.movieCreated(resp))\n\t\t.catch(error => console.log(error))\n\n\t}\n\n\tconst isDisabled = title.length === 0 || description.length === 0;\n\n\treturn (\n\t\t<React.Fragment>\n\t\t{ props.movie ?(\n\t\t\t<div>\n\t\t\t<label id=\"title\" htmlFor =\"title\"> Title </label>\n\t\t\t<br/>\n\t\t\t<input id=\"title\" type=\"text\" palceholder=\"title\" value={title}\n\t\t\tonChange={evt => setTitle(evt.target.value)}/>\n\t\t\t<br/>\n\t\t\t<label htmlFor=\"description\" >Description</label>\n\t\t\t<br/>\n\t\t\t<textarea type=\"text\" id=\"description\" palceholder=\"Description\" value={description}\n\t\t\tonChange={evt => setDescription(evt.target.value)}/>\n\t\t\t<br/>\n\t\t\t{ props.movie.id ? \n\t\t\t<button onClick={ evt => updateClicked()} disabled={isDisabled}>Update</button> :\n\t\t\t<button onClick={ evt => createClicked()} disabled={isDisabled}>Create</button> \n\t\t\t\t}\t\n\t\t\t</div>\n\t\t) : null}\n\n\n\t\t</React.Fragment>\n\t\t)\n}\n\nexport default MovieForm;\n\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport MovieList from './components/movie-list';\nimport MovieDetails from './components/movie-details';\nimport MovieForm from './components/movie-form';\nimport { useCookies } from 'react-cookie';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFilm, faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\nimport { useFetch } from './hooks/useFetch';\n\n\nfunction App() {\n\n\n  const [movies, setMovie] = useState([]);\n\n  const [selectedMovie, setSelectedMovie] = useState(null);\n\n  const [editedMovie, setEditedMovie] = useState(null);\n\n  const [token, setToken, deleteToken] = useCookies(['mr-token']);\n  \n  const [data, loading, error] = useFetch();\n\n  useEffect( () => {\n    if (!token['mr-token']) window.location.href = '/';\n  }, [token])\n\n  const movieClicked = movie => {\n    setSelectedMovie(movie);\n    setEditedMovie(null);\n  }\n\n  const loadMovie = (movie) => {\n    setSelectedMovie(movie);\n  }\n\n  const editClicked = (movie) => {\n    setEditedMovie(movie);\n    setSelectedMovie(null);\n  }\n\n  const updatedMovie = (movie) => {\n    const newMovies = movies.map(mov =>{\n      if ( mov.id === movie.id ) {\n        return movie;\n      } else {\n        return mov;\n      }\n\n    })\n    setMovie(newMovies);\n  }\n\n  const newMovie = () => {\n    setEditedMovie({title:'','description':''})\n    setSelectedMovie(null);\n  }\n\n  const movieCreated = (movie) => {\n    const newMovies = [...movies, movie]\n    console.log(newMovies)\n    setMovie(newMovies);\n  }\n\n  const removeClicked = (movie) => {\n    const newMovies = movies.filter( mov => mov.id !== movie.id);\n    setMovie(newMovies);\n    \n    }\n    \n\n  useEffect( () => {\n      console.log(data)\n        setMovie(data)\n      }, [data])\n\n  const logoutUser = () => {\n    deleteToken(['mr-token']);\n    window.location.href = '/movies';\n  }\n\n  if (loading)\n    return (<h1>Loading....</h1>)\n  if (error)\n    return (<h1> Error </h1>)\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <h1>\n      <FontAwesomeIcon icon={faFilm}/>\n      <span>Movie Rater</span></h1>\n      </header>\n      <FontAwesomeIcon onClick = {logoutUser}icon={faSignOutAlt}/>\n      <div className=\"layout\">\n        <div>\n          <MovieList movies = {movies}\n           movieClicked={movieClicked}\n            editClicked={editClicked}\n            removeClicked={removeClicked}/>\n          <button onClick={newMovie}>New movie</button>\n        </div>\n          <MovieDetails movie={selectedMovie} updateMovie={loadMovie}/>\n\n          {editedMovie ? <MovieForm movie={editedMovie} updatedMovie={updatedMovie} movieCreated={movieCreated}/> : null}\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from 'react';\nimport { API } from '../api-service';\nimport { useCookies } from 'react-cookie'\n\nfunction useFetch() {\n\tconst [data, setData] = useState([]);\n\tconst [loading, setLoading] = useState(true);\n\tconst [error, setError] = useState();\n\n\tconst [token] = useCookies(['mr-token']);\n\n\tuseEffect( () => {\n\t\tasync function fetchData(){\n\t\t\tsetLoading(true);\n\t\t\tsetError();\n\t\t\tconst data = await API.getMovies(token['mr-token']).catch( err => setError(err))\n\t\t\tsetData(data);\n\t\t\tsetLoading(false);\n\t\t}\n\t\tfetchData()\n\t}, [])\n\treturn [data, loading, error]\n\n}\n\nexport {useFetch};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {useState, useContext, useEffect} from 'react'\nimport { API } from '../api-service'\nimport { TokenContext } from '../index'\nimport { useCookies } from 'react-cookie'\n\nfunction Auth(){\n\n\tconst [username, setUsername] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [isLoginView, setIsLoginView] = useState(true)\n\tconst [token, setToken] = useCookies(['mr-token']);\n\n\tconst loginClicked = () => {\n\t\tAPI.loginUser({username, password})\n\t\t.then( resp => setToken('mr-token', resp.token))\n\t\t.catch( error => console.log(error))\n\t}\n\n\tconst registerClicked = () => {\n\t\tAPI.registerUser({username, password})\n\t\t.then( () => loginClicked({username, password}))\n\t\t.catch( error => console.log(error))\n\t}\n\n\tuseEffect( () => {\n\t\tif (token['mr-token']) window.location.href = '/movies';\n\t}, [token])\n\n\tconst isDisabled = username.length === 0 || password.length === 0;\n\n\treturn(\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t      {isLoginView ? <h1>Login</h1> : <h1>Register</h1>}\t\t\n\t\t    </header>\n\t\t\t<div className=\"login-container\">\n\t\t\t\t<label id=\"username\" htmlFor =\"username\"> Username </label>\n\t\t\t\t<br/>\n\t\t\t\t<input id=\"username\" type=\"text\" palceholder=\"username\" value={username}\n\t\t\t\tonChange={evt => setUsername(evt.target.value)}/>\n\t\t\t\t<br/>\n\t\t\t\t<label htmlFor=\"password\" >Password</label>\n\t\t\t\t<br/>\n\t\t\t\t<input type=\"password\" id=\"password\" palceholder=\"Password\" value={password}\n\t\t\t\tonChange={evt => setPassword(evt.target.value)}/>\n\t\t\t\t<br/>\n\t\t\t\t{\n\t\t\t\t\tisLoginView ? <h1><button onClick={ evt => loginClicked()} disabled = {isDisabled}>Login</button></h1>\n\t\t\t\t\t: <button onClick={ evt => registerClicked()}>Register</button>\n\t\t\t\t}\t\n\t\t\t\t{ isLoginView ? <p onClick={() => setIsLoginView(false)} disabled = {isDisabled}> Yout don't have an account? Register here! </p>\n\t\t\t\t: <p onClick={() => setIsLoginView(true)}> Yout already have an account? Login here! </p>}\t\n\t\t\t\t\n\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\n}\n\nexport default Auth;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Route, BrowserRouter } from 'react-router-dom'\nimport Auth from './components/auth'\nimport { CookiesProvider }  from  'react-cookie'\n\n\nfunction Router(){\n\n\nreturn(\n  <React.StrictMode>\n  \t<CookiesProvider>\n\t    <BrowserRouter>\n\t    \t<Route exact path=\"/\" component={Auth}/>\n\t    \t<Route exact path=\"/movies\" component={App}/>\n\t    </BrowserRouter>\n    </CookiesProvider>\n  </React.StrictMode>\n  \n  )\n}\n\nReactDOM.render(\n  <Router />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}